{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","initialTodos","App","useState","setTittle","hasTitleError","setHasTitleError","selectUserId","setSelectUserId","hasUserIdError","setHasUserIdError","setTodos","maxId","Math","max","action","method","onSubmit","event","newTodo","preventDefault","trim","currentTodo","htmlFor","placeholder","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cb08e07.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo : React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo : Todo;\n};\n\nexport const TodoInfo : React.FC <Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    {!!todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import { Todo } from '../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList : React.FC <Props> = ({ todos }) => (\n  <section>\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTittle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [selectUserId, setSelectUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const [todos, setTodos] = useState(initialTodos);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTittle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  const reset = () => {\n    setTittle('');\n    setHasTitleError(false);\n    setSelectUserId(0);\n    setHasUserIdError(false);\n  };\n\n  const maxId = Math.max(...todos.map(todo => todo.id));\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!selectUserId);\n\n    if (!title.trim() || !selectUserId) {\n      return;\n    }\n\n    addTodo({\n      id: maxId + 1,\n      userId: selectUserId,\n      title,\n      completed: false,\n      user: getUser(selectUserId),\n    });\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            placeholder=\"Enter title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={selectUserId}\n            onChange={handleChangeUser}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserIdError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          disabled={hasTitleError || hasUserIdError}\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}